// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Models;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(MeetingDbContext))]
    [Migration("20240323075018_initial create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvailableTimePerson", b =>
                {
                    b.Property<int>("PersonAvailableTimesAvailableTimeId")
                        .HasColumnType("int");

                    b.Property<int>("PersonAvailableTimesPersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonAvailableTimesAvailableTimeId", "PersonAvailableTimesPersonId");

                    b.HasIndex("PersonAvailableTimesPersonId");

                    b.ToTable("AvailableTimePerson");
                });

            modelBuilder.Entity("server.Models.AvailableTime", b =>
                {
                    b.Property<int>("AvailableTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailableTimeId"));

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("AvailableTimeId");

                    b.ToTable("AvailableTime");
                });

            modelBuilder.Entity("server.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("RoomId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("server.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<DateTime?>("MeetingEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MeetingStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeInterval")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("AvailableTimePerson", b =>
                {
                    b.HasOne("server.Models.AvailableTime", null)
                        .WithMany()
                        .HasForeignKey("PersonAvailableTimesAvailableTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonAvailableTimesPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("server.Models.Person", b =>
                {
                    b.HasOne("server.Models.Room", "Room")
                        .WithMany("Participants")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("server.Models.Room", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
